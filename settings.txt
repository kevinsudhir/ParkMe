**PRE-SETTINGS FOR MOBILE APPLICATION SETUP:**
1. A Firebase project has to be created on the Firebase website.
	- First step is to login to the created firebase account via Android studio
	
    - Second is to setup the Firebase storage rules for the project.
		- Edit the rules read, write section and add as: "allow read, write: if request.auth != null;"			

    - Third is to create a Firebase Realtime database 
		- Then it has to be set into the production mode
		- and then edit the rules read, write section and add as ".read": "true", ".write": "true"
		
    - Fourth is to set-up Email/Password authentication, Go to authentication, Sign-In method and enable Email/Password authentication.

    - And finally, Navigate to project settings and 
		- First Add this android app ParkMe and the "google-services.json" should be downloaded.
		- Next copy and replace the existing json file with the downloaded file to both the root folder and app folder.

2. To setup Google Maps services, an API key has to be created from the Google Developers Console.
		- Never share the API key with anyone, for saftey reasons.

3. In the last, Go to strings.xml file in res folder of the app and edit the following to
	- First edit the firebase_page_url string and insert your project-ID.firebaseapp.com in place of existing one. 
	- Second edit the map_key string and Insert the Google Developers Console API key created in last step. 
	
**PRE-SETTINGS FOR IoT Hardware Code SETUP:**
1. First install the latest Arduino IDE
2. Open the ParkMe.ino sketch in the Arduino IDE. The file exists in the repo home folder
3. In the Arduino IDE, Go to tools -> Manage Libraries and search for ESP8266WiFi.h first and install it, then search for FirebaseESP8266.h and install it.
4. Then change these two strings in the code 
	- #define FIREBASE_HOST "parkme-956ec-default-rtdb.europe-west1.firebasedatabase.app/" or insert your project-ID.firebase.app/
	- #define FIREBASE_AUTH "Firebase API key to be added here"
5. Next connect the system to any Wi-Fi network and enter the router SSID and password in below lines -
	- const char* ssid="Router SSID";
	- const char* password = "password";
6. In command prompt get your ip address of the Wi-Fi adapter and input it here in the code: IPAddress server(192,168,xxx,xxx);
7. Setup the hardware system following the circuit diagram for only two of the IR sensors and LED's.
	- The circuit diagram is in the images folder in home directory or in the appendix of the report file BupalamSudhir-2356685.pdf which is also in the home directory. 
8. In the code where ever there is "-NAMai1OSgdXlQaMgBsY" string replace it with the parking area key name from Firebase.
9. After setting up the circuit, the pins should be defined correctly in these lines:
	- For first IR sensor pin #define SLOT1 D0
	- For second IR sensor pin #define SLOT2 D1
	- For first LED #define LED1 D5
	- For second LED #define LED2 D7
10. Then compile and upload the code for the connection to be successful.

